{
  "D:\\youtube-embed-parser": {
    "versionSfCore": null,
    "versionFramework": "4.4.4",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>"
    },
    "composeServiceName": null,
    "servicePath": "D:\\youtube-embed-parser",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "youtube-embed-parser",
      "build": {
        "esbuild": {
          "bundle": false,
          "minify": false
        }
      },
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "ap-northeast-2",
        "stage": "dev",
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "Resource": "arn:aws:logs:*:*:*"
              }
            ]
          }
        },
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ParseYoutubeEmbedLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/youtube-embed-parser-dev-parseYoutubeEmbed"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "youtube-embed-parser",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/youtube-embed-parser-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/youtube-embed-parser-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                          ],
                          "Resource": "arn:aws:logs:*:*:*"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "youtube-embed-parser",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-ap-northeast-2-f16f399d-f67b"
            }
          }
        }
      },
      "functions": {
        "parseYoutubeEmbed": {
          "handler": ".build/index.handler",
          "events": [
            {
              "http": {
                "path": "youtube/parse",
                "method": "post"
              }
            }
          ],
          "name": "youtube-embed-parser-dev-parseYoutubeEmbed"
        }
      },
      "package": {
        "include": [
          ".build/**"
        ],
        "exclude": [
          "node_modules/**"
        ],
        "artifactsS3KeyDirname": "serverless/youtube-embed-parser/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-ap-northeast-2-f16f399d-f67b"
      }
    },
    "serviceRawFile": "service: youtube-embed-parser  # 서비스 이름\r\n\r\nbuild:\r\n  esbuild:\r\n    # Enable or Disable bundling the function code and dependencies. (Default: true)\r\n    bundle: false\r\n    # Enable minifying function code. (Default: false)\r\n    minify: false\r\n\r\n\r\nprovider:\r\n  name: aws  # AWS 사용\r\n  runtime: nodejs20.x  # Node.js 20 버전 사용\r\n  region: ap-northeast-2  # 기본 리전 설정 (원하는 리전으로 수정 가능)\r\n  stage: dev  # 배포 단계 (development 단계)\r\n\r\n  iam:\r\n    role:\r\n      statements:  # Lambda가 필요한 IAM 권한 추가\r\n        - Effect: Allow\r\n          Action:\r\n            - logs:CreateLogGroup\r\n            - logs:CreateLogStream\r\n            - logs:PutLogEvents\r\n          Resource: arn:aws:logs:*:*:*\r\n\r\nfunctions:\r\n  parseYoutubeEmbed:  # Lambda 함수 이름\r\n    handler: .build/index.handler  # 함수 핸들러 정의 (handler.js 파일 내에 parseYoutubeEmbed 함수 사용)\r\n    events:\r\n      - http:\r\n          path: youtube/parse  # API Gateway로 Lambda 함수를 트리거하는 HTTP 경로\r\n          method: post  # HTTP 메서드 (GET)\r\n\r\npackage:\r\n  include:\r\n    - .build/**\r\n  exclude:\r\n    - node_modules/**\r\n",
    "command": [
      "deploy"
    ],
    "options": {
      "debug": "*"
    },
    "error": {
      "message": "ENOENT: no such file or directory, open 'D:\\youtube-embed-parser\\.serverless\\build\\package.json'",
      "stack": "Error: ENOENT: no such file or directory, open 'D:\\youtube-embed-parser\\.serverless\\build\\package.json'\n    at async open (node:internal/fs/promises:639:25)\n    at async writeFile (node:internal/fs/promises:1212:14)\n    at async Esbuild._preparePackageJson (C:\\Users\\wdjty\\.serverless\\releases\\4.4.4\\serverless\\lib\\plugins\\esbuild\\index.js:901:5)\n    at async before:package:createDeploymentArtifacts (C:\\Users\\wdjty\\.serverless\\releases\\4.4.4\\serverless\\lib\\plugins\\esbuild\\index.js:45:11)\n    at async PluginManager.runHooks (C:\\Users\\wdjty\\.serverless\\releases\\4.4.4\\serverless\\lib\\classes\\plugin-manager.js:680:9)\n    at async PluginManager.invoke (C:\\Users\\wdjty\\.serverless\\releases\\4.4.4\\serverless\\lib\\classes\\plugin-manager.js:718:9)\n    at async PluginManager.spawn (C:\\Users\\wdjty\\.serverless\\releases\\4.4.4\\serverless\\lib\\classes\\plugin-manager.js:740:5)\n    at async before:deploy:deploy (C:\\Users\\wdjty\\.serverless\\releases\\4.4.4\\serverless\\lib\\plugins\\deploy.js:37:11)\n    at async PluginManager.runHooks (C:\\Users\\wdjty\\.serverless\\releases\\4.4.4\\serverless\\lib\\classes\\plugin-manager.js:680:9)\n    at async PluginManager.invoke (C:\\Users\\wdjty\\.serverless\\releases\\4.4.4\\serverless\\lib\\classes\\plugin-manager.js:718:9)",
      "code": "ENOENT"
    },
    "params": {},
    "machineId": "bb1f98bb375909b0e75a6ef39eded500",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "0358f301-b0b5-4f09-878d-39a4ea4ea162",
    "orgName": "tyjeong",
    "userId": "C81GQLr70vr2Tndz1B",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "tyjeong",
    "subscription": null,
    "userEmail": "wdjty326@gmail.com",
    "serviceProviderAwsRegion": "ap-northeast-2",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "012547730306",
    "projectType": "traditional",
    "versionSf": "4.4.4",
    "serviceProviderAwsCfStackName": "youtube-embed-parser-dev",
    "serviceUniqueId": "arn:aws:cloudformation:ap-northeast-2:012547730306:stack/youtube-embed-parser-dev/2daca86a-3986-4496-9306-30b2d37c8802",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:ap-northeast-2:012547730306:stack/youtube-embed-parser-dev/2daca86a-3986-4496-9306-30b2d37c8802",
    "serviceProviderAwsCfStackCreated": "2024-10-05T16:30:30.909Z",
    "serviceProviderAwsCfStackUpdated": "2024-10-06T12:16:04.627Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "ParseYoutubeEmbedLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-northeast-2:012547730306:function:youtube-embed-parser-dev-parseYoutubeEmbed:4",
        "Description": "Current Lambda function version",
        "ExportName": "sls-youtube-embed-parser-dev-ParseYoutubeEmbedLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://kdds1nhug8.execute-api.ap-northeast-2.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-youtube-embed-parser-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-ap-northeast-2-f16f399d-f67b",
        "ExportName": "sls-youtube-embed-parser-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}